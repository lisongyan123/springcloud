<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cloudservice.dao.SysLogDao">
  <resultMap id="BaseResultMap" type="com.example.cloudservice.domain.SysLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="opt_id" jdbcType="INTEGER" property="optId" />
    <result column="opt_name" jdbcType="VARCHAR" property="optName" />
    <result column="log_type" jdbcType="VARCHAR" property="logType" />
    <result column="log_message" jdbcType="VARCHAR" property="logMessage" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, opt_id, opt_name, log_type, log_message, create_time
  </sql>
  <select id="selectByExample" parameterType="com.example.cloudservice.domain.SysLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.cloudservice.domain.SysLogExample">
    delete from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.cloudservice.domain.SysLog" useGeneratedKeys="true">
    insert into sys_log (opt_id, opt_name, log_type, 
      log_message, create_time)
    values (#{optId,jdbcType=INTEGER}, #{optName,jdbcType=VARCHAR}, #{logType,jdbcType=VARCHAR}, 
      #{logMessage,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.cloudservice.domain.SysLog" useGeneratedKeys="true">
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="optId != null">
        opt_id,
      </if>
      <if test="optName != null">
        opt_name,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="logMessage != null">
        log_message,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="optId != null">
        #{optId,jdbcType=INTEGER},
      </if>
      <if test="optName != null">
        #{optName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logMessage != null">
        #{logMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.cloudservice.domain.SysLogExample" resultType="java.lang.Long">
    select count(*) from sys_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.optId != null">
        opt_id = #{record.optId,jdbcType=INTEGER},
      </if>
      <if test="record.optName != null">
        opt_name = #{record.optName,jdbcType=VARCHAR},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=VARCHAR},
      </if>
      <if test="record.logMessage != null">
        log_message = #{record.logMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_log
    set id = #{record.id,jdbcType=INTEGER},
      opt_id = #{record.optId,jdbcType=INTEGER},
      opt_name = #{record.optName,jdbcType=VARCHAR},
      log_type = #{record.logType,jdbcType=VARCHAR},
      log_message = #{record.logMessage,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.cloudservice.domain.SysLog">
    update sys_log
    <set>
      <if test="optId != null">
        opt_id = #{optId,jdbcType=INTEGER},
      </if>
      <if test="optName != null">
        opt_name = #{optName,jdbcType=VARCHAR},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=VARCHAR},
      </if>
      <if test="logMessage != null">
        log_message = #{logMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.cloudservice.domain.SysLog">
    update sys_log
    set opt_id = #{optId,jdbcType=INTEGER},
      opt_name = #{optName,jdbcType=VARCHAR},
      log_type = #{logType,jdbcType=VARCHAR},
      log_message = #{logMessage,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>